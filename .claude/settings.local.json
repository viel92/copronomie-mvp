{
  "permissions": {
    "allow": [
      "Read(//c/Users/sekou/OneDrive/Documents/copronomie/Migration/**)",
      "Bash(mkdir:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm build:*)",
      "Read(//c/Users/sekou/OneDrive/Documents/copronomie/src/pages/**)",
      "Bash(cat:*)",
      "Read(//c/Users/sekou/OneDrive/Documents/copronomie/**)",
      "Bash(timeout 10 pnpm run dev)",
      "Bash(timeout 5 pnpm run dev)",
      "Bash(pnpm run:*)",
      "Bash(tasklist:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c \"taskkill /pid 25988 /f & taskkill /pid 6948 /f & taskkill /pid 7524 /f & taskkill /pid 8280 /f & taskkill /pid 2596 /f\")",
      "Bash(cmd /c \"taskkill /pid 26704 /f & taskkill /pid 10540 /f & taskkill /pid 37780 /f & taskkill /pid 33436 /f & taskkill /pid 35184 /f\")",
      "Bash(timeout 60 pnpm build)",
      "Bash(timeout 180 pnpm build)",
      "Bash(curl -s -o NUL -w \"%{http_code}\" \"http://localhost:3000/syndic/dashboard\")",
      "Bash(pnpm dev:*)",
      "Bash(curl -s -o NUL -w \"%{http_code}\" \"http://localhost:3000/\")",
      "Bash(cmd /c \"del /f /q .next\\trace\")",
      "Bash(NODE_OPTIONS='--max-old-space-size=4096' timeout 20 pnpm build)",
      "Bash(pnpm -r --filter='!@copronomie/web' --filter='!@copronomie/api' build)",
      "Bash(netstat:*)",
      "Bash(wmic:*)",
      "Bash(cmd /c \"taskkill /F /PID 36768 2>nul && echo Killed || echo Already dead\")",
      "Bash(timeout:*)",
      "Bash(cmd /c \"for /f \"\"skip=1 tokens=2\"\" %i in (''tasklist /fi \"\"imagename eq node.exe\"\" /fo table /nh'') do @if not \"\"%i\"\"==\"\"9504\"\" taskkill /F /PID %i >nul 2>&1\")",
      "Bash(curl -s -o nul -w \"%{http_code}\" \"http://localhost:3000/\")",
      "Read(//c/Users/sekou/Downloads/Copronomie prodduction/import-coproprietes/**)",
      "Bash(test:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm tsx:*)",
      "Bash(cmd /c:*)",
      "Bash(node:*)",
      "WebSearch",
      "Bash(pnpm exec:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm test:e2e:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(git checkout:*)",
      "Bash(tee:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Prepare production deployment\n\n- Fix TypeScript build errors in quote-line.service.ts\n- Fix AuthProvider SSR hydration (isLoading state)\n- Fix condo schema mismatch (remove units_count)\n- Add E2E tests with Playwright (1/4 passing)\n- Add deployment guide (DEPLOYMENT.md)\n- Add environment examples (.env.example files)\n- Update ROADMAP.md with deployment status\n\nTests:\n- condo-creation.spec.ts: PASSING\n- syndic-workflow.spec.ts: WIP (selector issues)\n- full-workflow.spec.ts: WIP (selector issues)\n- company-workflow.spec.ts: WIP (no seed data)\n\nProduction build: SUCCESSFUL\nNext steps: Deploy to Vercel + Railway\n\nGenerated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npx @sentry/wizard@latest:*)",
      "Read(//c/Users/sekou/Downloads/f274540d-407e-4f77-854a-500457b80df0/**)",
      "Bash(tree:*)",
      "Bash(git restore:*)",
      "Bash(pnpm:*)",
      "WebFetch(domain:fluence.framer.website)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:www.framer.com)",
      "Read(//c/Users/sekou/AppData/Roaming/Claude/**)",
      "WebFetch(domain:unframer.co)",
      "WebFetch(domain:www.fontshare.com)",
      "Read(//c/Users/sekou/Downloads/logs_48580185596/**)",
      "Bash(tail -100 \"C:/Users/sekou/Downloads/logs_48580185596/3_Tests & Build.txt\")",
      "Read(//c/Users/sekou/Downloads/logs_48580735455/**)",
      "Bash(find:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "framer"
  ],
  "outputStyle": "default",
  "spinnerTipsEnabled": false
}
